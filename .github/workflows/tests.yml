name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc ffmpeg

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install Python dependencies
      run: |
        uv sync --all-extras --dev

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        uv run flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        uv run flake8 src --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

    - name: Check code formatting with black
      run: |
        uv run black --check src tests scripts

    - name: Type checking with mypy
      run: |
        uv run mypy src --ignore-missing-imports

    - name: Test with pytest
      run: |
        uv run pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc ffmpeg

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install Python dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run integration tests
      run: |
        uv run pytest tests/integration/ -v --tb=short

    - name: Test CLI commands
      run: |
        uv run python scripts/process_epub.py --help
        uv run python scripts/batch_convert.py --help
        uv run python -m src.cli --help

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv pip install safety bandit --system

    - name: Security scan with Safety
      run: |
        safety check --json || true

    - name: Security scan with Bandit
      run: |
        bandit -r src -f json || true